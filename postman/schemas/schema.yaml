openapi: 3.0.0
info:
  version: 1.0.0
  title: Plants API
  description: A simple API for plants and lists

servers:
  - url: https://plants.tayoby.com

security:
  - BasicAuth: []

paths:
  /plants:
    get:
      description: Returns a list of plants 
      parameters:
        #  ----- Added line  ------------------------------------------
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
        #  ---- /Added line  ------------------------------------------
      responses:
        '200':
          description: Successfully returned a list of palnts
          content:
            application/json:
              schema:
                type: array
                items:
                  #  ----- Added line  --------------------------------
                  $ref: '#/components/schemas/Plant'
                  #  ---- /Added line  --------------------------------
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------

    post:
      description: Lets a user post a new plant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              #  ----- Added line  ------------------------------------
              $ref: '#/components/schemas/Plant'
              #  ---- /Added line  ------------------------------------
      responses:
        '200':
          description: Successfully created a new plant
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------    

  /plants/{username}:
    get:
      description: Obtain information about an artist from his or her unique username
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          
      responses:
        '200':
          description: Successfully returned an artist
          content:
            application/json:
              schema:
                type: object
                properties:
                  artist_name:
                    type: string
                  artist_genre:
                    type: string
                  albums_recorded:
                    type: integer
                
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------     

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://petstore.swagger.io/oauth/authorize'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header

  schemas:
    Plant:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created: 
          type: string
          format: date
          description: creation date
          example: "2021-01-30"
        lastUpdated:
          type: string
          format: date
          description: modified date
          example: "2021-01-30"
        latin_name:
          type: string
        common_name:
          type: array
          items:
            type: string
        description:
          type: string
        plantType:
          $ref: '#/components/schemas/lifecycle'
        price_per_oz:
          type: integer
        seeds_per_oz:
          type: integer
        germinationTypes:
          type: array
          items:
            $ref: '#/components/schemas/germinationType'
        lifecycle:
          $ref: '#/components/schemas/lifecycle'
        soils:
          type: array
          items:
            $ref: '#/components/schemas/soil'
        lights:
          type: array
          items:
            $ref: '#/components/schemas/light'
        moistures:
          type: array
          items:
            $ref: '#/components/schemas/moisture'
    plantType:
     type: string
     enum:
        - Forb/Herb
        - Graminoid
        - Lichenous
        - Nonvascular
        - Shrub
        - Tree
        - Vine
    germinationType:
     type: string
     enum:
        - A
        - C30
        - C60
        - C90
    lifecycle:
      type: string
      enum:
        - Annual
        - Perennial
        - Biennial
    soil:
      type: string
      enum:
        - Sand
        - Loam
        - Clay
    light:
      type: string
      enum:
        - Full
        - Partial
        - Shade
    moisture:
      type: string
      enum:
        - Wet
        - Medium-Wet
        - Medium
        - Medium-Dry
        - Dry

  parameters:
    PageLimit:
      name: limit
      in: query
      description: Limits the number of items on a page
      schema:
        type: integer
      
    PageOffset:
      name: offset
      in: query
      description: Specifies the page number of the artists to be displayed
      schema:
        type: integer

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string
  #  ---- /Added lines  ----------------------------------------
  